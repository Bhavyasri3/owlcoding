def sumOfPowers(self, a : int, b : int) -> int:
        def factor(n):
            primes=[True]*(n + 1)
            primes[0]=primes[1]=False
            p=2
            while p*p<=n:
                if primes[p]==True:
                    for i in range(p*p,n+1,p):
                        primes[i] = False
                p+=1
            return [i for i in range(2, n + 1) if primes[i]]
            # //how many factors 100 2*2 X 5*2=(2+1)*(2+1)
            # //if any number square root is prime then it have 
        max_limit=int(b ** 0.5)+1
        primes=factor(max_limit)
        ts=0
        for i in range(a,b+1):
            num = i
            s=0
            for prime in primes:
                if prime * prime>num:
                    break
                if num % prime == 0:
                    c=0
                    while num%prime == 0:
                        num //=prime
                        c+=1
                    s+=c
            if num > 1:
                s += 1
            ts+=s
    
        return ts
